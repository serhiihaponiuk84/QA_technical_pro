console.log('number' + 3 + 3);
// тут будет конкатенация, так как один из операндов строка, числа 3 будут переведы в строки
// number33
console.log(null + 3);
// null преобразуется в 0 : Number
// результат сложения 3
console.log(5 && "qwerty");
// логические И в результате вернет или первое falsy, или последнее truthy значение
// так как falsy значений в выражении нет, то вернется строка qwerty
console.log(+'40' + +'2' + "hillel");
// операции выполняются последовательно, +'40' даст число 40, +'2' даст число 2
// вначале выполнится операция сложения чисел 40 и 2, результат 42
// но так как дальше идет строка то произойдет конкатенация строк '42' и 'hillel'
// результат 42hillel
console.log('10' - 5 === 6);
// при вычитании из строки '10' числа 5 вначале произойдет перевод в Number строки
// из числа 10 будет вычтено 5, результат 5
// и число 5 будет сравнено с числом 6, результат будет булевое false
console.log(true + false);
// произойдет преобразование к типу Number при сложении логических операндов
// в результате будет число 1
console.log('4px' - 3);
// при попытке вычесть из строки число строка будет пытаться преобразиться в тип Number
// резудбтат преобразования строки '4px' в Number - это NaN
// вычитание из NaN любого числа - это тоже NaN
console.log('4' - 3);
// аналогично, при попытке вычесть из строки число строка будет пытаться преобразиться в тип Number
// резудбтат преобразования строки '4' в Number - это 4
// 4 - 3 = 1
console.log('6' + 3 ** 0);
// операция возведения в степень имень больший приоритет, чем сложение
// 3 в степени 0 - это 1
// так как один из операндов в сложении это строка, то произойдет сложение строк '6' и преобразованной
// к строке '1' - конкатенация строк
// результат '61'
console.log(12 / '6');
// так как один из операндов у оператора деления - строка, то в первую очередь произойдет ее приведение к типу Number
// эта операция будет успешной - результат число 6
// Далее произойдет просто деление двух чисел 12 / 6 = 2
console.log('10' + (5 === 6));
// операция в скобках имеет больший приоритет, выполнится в первую очередь
// результатом сравнения 5 === 6 будет булевое false
// так как один из операндов при сложении строка, то произойдет конкатенация строк '10' и 'false'
// результат '10false'
console.log(null == '');
// операнды не равны, результат булевое false
console.log(3 ** (9 / 3));
// операция в скобках имеет больший приоритет, выполнится в первую очередь
// 9 / 3 = 3
// 3 в степени 3 = 27
console.log(!!'false' == !!'true');
// !! - это преобразование чего угодно (кроме 0, пустой строки, NaN, undefined, null) к булевому типу
// операция сравнения даст результат булевое true
console.log(0 || '0' && 1);
// логические И имеет больший приоритет и выполнится в первую очередь
// логическое И в результате вернет или первое falsy, или последнее truthy значение
// в конеретном примере в результате логического И получим значение 1
// далее произойдет логическое ИЛИ между операндами 0 и 1
// логическое или в результате вернет или последнее falsy, или первое truthy значение
// в конкретном примере в результате будет 1
console.log((+null == false) < 1);
// +null - результат +0
// результат сравнения операндов +0 и false - это истина, булевое true
// при операции сравнения < операнд true будет преобразован к типу Number
// и в результате сравнения 1 < 1 получится булевое false
console.log(false && true || true);
// логическое И вернет false, false && true - false
// логическое ИЛИ вернет true, false || true - true
// результат булевое true
console.log(false && (false || true));
// хоть у оператора логическое И и есть операнд false, все равно выполнится операция в скобках первая
// логическое ИЛИ вернет true, false || true - true
// логическое И вернет false, false && true - false
// результат булевое false
console.log((+null == false) < 1 ** 5);
// вначале выполнятся операции в скобках
// +null - результат +0
// результат сравнения операндов +0 и false - это истина, булевое true
// следующая операция, которая имеет высший приоритет чем сравнение справа - это операция возведения в степень
// 1 в степени 5 - это 1
// true < 1
// при операции сравнения < операнд true будет преобразован к типу Number
// и в результате сравнения 1 < 1 получится булевое false